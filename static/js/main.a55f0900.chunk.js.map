{"version":3,"sources":["components/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","time","Date","timerId","window","setInterval","setState","console","info","toUTCString","slice","this","prevProps","name","props","debug","clearInterval","className","Component","getRandomName","value","now","toString","App","hasClock","clockName","document","addEventListener","event","preventDefault","ReactDOM","render","getElementById"],"mappings":"6MAMaA,EAAb,4MACEC,MAAQ,CAAEC,KAAM,IAAIC,KAAQC,QAAS,GADvC,uDAGE,WAAqB,IAAD,OACZA,EAAUC,OAAOC,aACrB,WACE,EAAKC,SAAS,CAAEL,KAAM,IAAIC,OAE1BK,QAAQC,KAAK,EAAKR,MAAMC,KAAKQ,cAAcC,OAAO,IAAK,MACtD,KAGLC,KAAKL,SAAS,CAAEH,cAZpB,gCAeE,SAAmBS,GACbA,EAAUC,OAASF,KAAKG,MAAMD,MAEhCN,QAAQQ,MAAR,uBAA8BH,EAAUC,KAAxC,eAAmDF,KAAKG,MAAMD,SAlBpE,kCAsBE,WACMF,KAAKX,MAAMG,SACba,cAAcL,KAAKX,MAAMG,WAxB/B,oBA4BE,WACE,OACE,sBAAKc,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGN,KAAKG,MAAMD,OAGb,YAED,sBAAMI,UAAU,cAAhB,SACGN,KAAKX,MAAMC,KAAKQ,cAAcC,OAAO,IAAK,YAtCrD,GAA2BQ,aCA3B,SAASC,IACP,IAAMC,EAAQlB,KAAKmB,MAAMC,WAAWZ,OAAO,GAE3C,MAAM,SAAN,OAAgBU,GAGX,IAAMG,EAAb,4MACEvB,MAAQ,CAAEwB,UAAU,EAAMC,UAAW,WADvC,uDAGE,WAAqB,IAAD,OAClBrB,OAAOC,aAAY,WACjB,EAAKC,SAAS,CAAEmB,UAAWN,QAC1B,MAEHO,SAASC,iBAAiB,eAAe,SAACC,GACxCA,EAAMC,iBACF,EAAK7B,MAAMwB,UACb,EAAKlB,SAAS,CAAEkB,UAAU,OAI9BE,SAASC,iBAAiB,SAAS,WAC5B,EAAK3B,MAAMwB,UACd,EAAKlB,SAAS,CAAEkB,UAAU,SAjBlC,oBAsBE,WACE,OACE,sBAAKP,UAAU,MAAf,UACE,6CACCN,KAAKX,MAAMwB,UACV,cAAC,EAAD,CAAOX,KAAMF,KAAKX,MAAMyB,mBA3BlC,GAAyBP,aCTzBY,IAASC,OACP,cAAC,EAAD,IACAL,SAASM,eAAe,W","file":"static/js/main.a55f0900.chunk.js","sourcesContent":["import { Component } from 'react';\n\nimport { ClockProps, ClockState } from '../types/ClockTypes';\n\n// let timerId: number;\n\nexport class Clock extends Component<ClockProps, ClockState> {\n  state = { time: new Date(), timerId: 0 };\n\n  componentDidMount() {\n    const timerId = window.setInterval(\n      () => {\n        this.setState({ time: new Date() });\n        // eslint-disable-next-line no-console\n        console.info(this.state.time.toUTCString().slice(-12, -4));\n      }, 1000,\n    );\n\n    this.setState({ timerId });\n  }\n\n  componentDidUpdate(prevProps: Readonly<ClockProps>) {\n    if (prevProps.name !== this.props.name) {\n      // eslint-disable-next-line no-console\n      console.debug(`Renamed from ${prevProps.name} to ${this.props.name}`);\n    }\n  }\n\n  componentWillUnmount(): void {\n    if (this.state.timerId) {\n      clearInterval(this.state.timerId);\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {this.props.name}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {this.state.time.toUTCString().slice(-12, -4)}\n        </span>\n      </div>\n    );\n  }\n}\n","import { Component } from 'react';\n\nimport './App.scss';\nimport { AppProps, AppState } from './types/AppTypes';\nimport { Clock } from './components/Clock';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\nexport class App extends Component<AppProps, AppState> {\n  state = { hasClock: true, clockName: 'Clock-0' };\n\n  componentDidMount() {\n    window.setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n\n    document.addEventListener('contextmenu', (event: MouseEvent) => {\n      event.preventDefault();\n      if (this.state.hasClock) {\n        this.setState({ hasClock: false });\n      }\n    });\n\n    document.addEventListener('click', () => {\n      if (!this.state.hasClock) {\n        this.setState({ hasClock: true });\n      }\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        {this.state.hasClock && (\n          <Clock name={this.state.clockName} />\n        )}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}